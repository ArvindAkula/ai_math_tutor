services:
  # Database Services
  postgres:
    image: postgres:15-alpine
    container_name: ai-math-tutor-postgres-prod
    environment:
      POSTGRES_DB: ai_math_tutor
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
      - ./shared/database/init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./shared/database/optimize.sql:/docker-entrypoint-initdb.d/02-optimize.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ai_math_tutor"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always
    networks:
      - ai-math-tutor-network
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'

  redis:
    image: redis:7-alpine
    container_name: ai-math-tutor-redis-prod
    volumes:
      - redis_data_prod:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always
    networks:
      - ai-math-tutor-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  # Core Services
  math-engine:
    build:
      context: ./math-engine
      dockerfile: Dockerfile
      target: production
    environment:
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/ai_math_tutor
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LOG_LEVEL=INFO
      - ENVIRONMENT=production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always
    networks:
      - ai-math-tutor-network
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.25'

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
      target: production
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/ai_math_tutor
      - REDIS_URL=redis://redis:6379
      - MATH_ENGINE_URL=http://math-engine:8001
      - JWT_SECRET=${JWT_SECRET}
      - LOG_LEVEL=INFO
      - ENVIRONMENT=production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      math-engine:
        condition: service_started
    restart: always
    networks:
      - ai-math-tutor-network
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.1'

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL:-http://localhost:8000}
      - REACT_APP_WS_URL=${REACT_APP_WS_URL:-ws://localhost:8000}
      - NODE_ENV=production
    depends_on:
      - api-gateway
    restart: always
    networks:
      - ai-math-tutor-network
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 512M
          cpus: '0.3'
        reservations:
          memory: 128M
          cpus: '0.1'

  # Monitoring and logging
  nginx:
    image: nginx:alpine
    container_name: ai-math-tutor-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - api-gateway
    restart: always
    networks:
      - ai-math-tutor-network

volumes:
  postgres_data_prod:
    driver: local
  redis_data_prod:
    driver: local

networks:
  ai-math-tutor-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16